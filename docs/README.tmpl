# Protocol Documentation
<a name="top"></a>

## Message Exchange Flow
![Message Exchange Flow](mainflow.png)

<!-- The above sequence diagram is generated at https://sequencediagram.org using the below code:

Message Exchange Flow

==recipient connects and authenticates==
participant Recipient
participant RecipientServerConn
participant Database
participant Broker
participant SenderServerConn
participant Sender
Recipient->RecipientServerConn:Connect WebSocket
RecipientServerConn->Recipient:AuthChallenge
Recipient->RecipientServerConn:AuthResponse
RecipientServerConn->Recipient:Ack

==sender connects anonymously==
Sender->SenderServerConn:Connect WebSocket
SenderServerConn->Sender:AuthChallenge
Sender->Sender:ignore auth challenge

==recipient registers key material==
Recipient->RecipientServerConn:Registration
RecipientServerConn->Database:Register()
RecipientServerConn->Recipient:Ack

==sender requests key material to init session==
Sender->SenderServerConn:RequestPreKeys
SenderServerConn->Database:RequestPreKeys()
loop for each matching device
SenderServerConn->Sender:PreKey
SenderServerConn->Sender:PreKey
end

==message exchange==
Sender->SenderServerConn:OutboundMessage
SenderServerConn->Broker:Publish()
SenderServerConn->Sender:Ack
Broker->RecipientServerConn:sealed sender message
RecipientServerConn->Recipient:InboundMessage
Recipient->RecipientServerConn:Ack
RecipientServerConn->Broker:Ack
end

==keep oneTimePreKeys filled==
loop periodically check if preKeys low
RecipientServerConn->Database:PreKeysRemaining()
RecipientServerConn->Recipient:PreKeysLow
RecipientServerConn->Database:Register()
end

-->

## Table of Contents
{{range .Files}}
{{$file_name := .Name}}- [{{.Name}}](#{{.Name}})
  {{- if .Messages }}
  {{range .Messages}}  - [{{.LongName}}](#{{.FullName}})
  {{end}}
  {{- end -}}
  {{- if .Enums }}
  {{range .Enums}}  - [{{.LongName}}](#{{.FullName}})
  {{end}}
  {{- end -}}
  {{- if .Extensions }}
  {{range .Extensions}}  - [File-level Extensions](#{{$file_name}}-extensions)
  {{end}}
  {{- end -}}
  {{- if .Services }}
  {{range .Services}}  - [{{.Name}}](#{{.FullName}})
  {{end}}
  {{- end -}}
{{end}}
- [Scalar Value Types](#scalar-value-types)

{{range .Files}}
{{$file_name := .Name}}
<a name="{{.Name}}"></a>
<p align="right"><a href="#top">Top</a></p>

## {{.Name}}
{{.Description}}

{{range .Messages}}
<a name="{{.FullName}}"></a>

### {{.LongName}}
{{.Description}}

{{if .HasFields}}
| Field | Type | Label | Description |
| ----- | ---- | ----- | ----------- |
{{range .Fields -}}
  | {{.Name}} | [{{.LongType}}](#{{.FullType}}) | {{.Label}} | {{if (index .Options "deprecated"|default false)}}**Deprecated.** {{end}}{{nobr .Description}}{{if .DefaultValue}} Default: {{.DefaultValue}}{{end}} |
{{end}}
{{end}}

{{if .HasExtensions}}
| Extension | Type | Base | Number | Description |
| --------- | ---- | ---- | ------ | ----------- |
{{range .Extensions -}}
  | {{.Name}} | {{.LongType}} | {{.ContainingLongType}} | {{.Number}} | {{nobr .Description}}{{if .DefaultValue}} Default: {{.DefaultValue}}{{end}} |
{{end}}
{{end}}

{{end}} <!-- end messages -->

{{range .Enums}}
<a name="{{.FullName}}"></a>

### {{.LongName}}
{{.Description}}

| Name | Number | Description |
| ---- | ------ | ----------- |
{{range .Values -}}
  | {{.Name}} | {{.Number}} | {{nobr .Description}} |
{{end}}

{{end}} <!-- end enums -->

{{if .HasExtensions}}
<a name="{{$file_name}}-extensions"></a>

### File-level Extensions
| Extension | Type | Base | Number | Description |
| --------- | ---- | ---- | ------ | ----------- |
{{range .Extensions -}}
  | {{.Name}} | {{.LongType}} | {{.ContainingLongType}} | {{.Number}} | {{nobr .Description}}{{if .DefaultValue}} Default: `{{.DefaultValue}}`{{end}} |
{{end}}
{{end}} <!-- end HasExtensions -->

{{range .Services}}
<a name="{{.FullName}}"></a>

### {{.Name}}
{{.Description}}

| Method Name | Request Type | Response Type | Description |
| ----------- | ------------ | ------------- | ------------|
{{range .Methods -}}
  | {{.Name}} | [{{.RequestLongType}}](#{{.RequestFullType}}){{if .RequestStreaming}} stream{{end}} | [{{.ResponseLongType}}](#{{.ResponseFullType}}){{if .ResponseStreaming}} stream{{end}} | {{nobr .Description}} |
{{end}}
{{end}} <!-- end services -->

{{end}}

## Scalar Value Types

| .proto Type | Notes | C++ | Java | Python | Go | C# | PHP | Ruby |
| ----------- | ----- | --- | ---- | ------ | -- | -- | --- | ---- |
{{range .Scalars -}}
  | <a name="{{.ProtoType}}" /> {{.ProtoType}} | {{.Notes}} | {{.CppType}} | {{.JavaType}} | {{.PythonType}} | {{.GoType}} | {{.CSharp}} | {{.PhpType}} | {{.RubyType}} |
{{end}}