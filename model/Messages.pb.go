//*
// tassis uses an asynchronous messaging pattern for interacting with the API.
//
// Clients typically connect to tassis via WebSockets to exchange messages.
//
// Clients will typically open two separate connections, authenticating on one and leaving
// the other unauthenticated.
//
// The unauthenticated connection is used for retrieving other identities' preKeys and
// sending messages to them, so as not to reveal the identityKey of senders.
//
// The authenticated connection is used for all other operations, including performing key
// management and receiving messages from other identities.
//
// Authentication is performed using a challenge-response pattern in which the server sends
// an authentication challenge to the client and the client responds with a signed authentication
// response identifying its identityKey and deviceId. On anonymous connections, clients simply ignore the
// authentication challenge. Successful authentications are acknowledged with a Number that gives information
// about the IdentityKey number under which the authenticated user is registered. This number is constant over
// time.
//
// Messages sent from clients to servers follow a request/response pattern. The server will always
// respond to these with either an Ack or a typed response. In the event of an error, it will respond
// with an Error message. This includes the following messages:
//
//  - Register        -> Ack
//  - Unregister      -> Ack
//  - RequestPreKeys  -> PreKeys
//  - OutboundMessage -> Ack
//
// Some messages sent from the server to the client require an Ack in response:
//
//  - inboundMessage  -> Ack
//
// Some messages don't require any response:
//
//  - PreKeysLow
//
// All messages sent within a given connection are identified by a unique sequence number (separate sequences
// for each direction). When a response message is sent in either direction, its sequence number is set to the
// message that triggered the response so that the client or server can correlate responses with requests.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: model/Messages.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Acknowledges successful receipt of a Message
type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{0}
}

// Indicates that an error occurred processing a request.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // An identifier for the error, like "unknown_identity"
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"` // Optional additional information about the error
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Error) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// An Address for a specific client
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityKey []byte `protobuf:"bytes,1,opt,name=identityKey,proto3" json:"identityKey,omitempty"` // The 32 byte ed25519 public key that uniquely identifies an identity (e.g. a user)
	DeviceId    []byte `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`       // Identifier for a specific device, only unique for a given identityKey
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{2}
}

func (x *Address) GetIdentityKey() []byte {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

func (x *Address) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

// Provides configuration information to clients
type Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxAttachmentSize int64 `protobuf:"varint,1,opt,name=maxAttachmentSize,proto3" json:"maxAttachmentSize,omitempty"` // The maximum allowed attachment size (encrypted size, not plaintext)
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{3}
}

func (x *Configuration) GetMaxAttachmentSize() int64 {
	if x != nil {
		return x.MaxAttachmentSize
	}
	return 0
}

// Login information supplied by clients in response to an AuthChallenge.
type Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // The Address that's logging in. This will become permanently associated with the current connection
	Nonce   []byte   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`     // This echoes back the nonce provided by the server in the AuthChallenge
}

func (x *Login) Reset() {
	*x = Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login) ProtoMessage() {}

func (x *Login) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login.ProtoReflect.Descriptor instead.
func (*Login) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{4}
}

func (x *Login) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Login) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

// A challenge to the client to authenticate. This is sent by the server once and only once, immediately after clients connect.
type AuthChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce []byte `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"` // A nonce to identify this authentication exchange
}

func (x *AuthChallenge) Reset() {
	*x = AuthChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthChallenge) ProtoMessage() {}

func (x *AuthChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthChallenge.ProtoReflect.Descriptor instead.
func (*AuthChallenge) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{5}
}

func (x *AuthChallenge) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

// A response to an AuthChallenge that is sent from the client to the server on any connection that the client wishes to authenticate.
// The server will accept an AuthResponse only once per connection.
type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login     []byte `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`         // The serialized form of the Login message
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"` // A signature of the serialized Login message calculated using the private key corresponding to the IdentityKey that's logging in
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{6}
}

func (x *AuthResponse) GetLogin() []byte {
	if x != nil {
		return x.Login
	}
	return nil
}

func (x *AuthResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Requires authentication
//
// A request to register a signed preKey and some set of one-time use preKeys. PreKeys are used by clients to perform X3DH key agreement in order to
// establish end-to-end encrypted sessions.
//
// This information is registered in the database under the client's Address. If multiple registrations are received, if signedPreKey matches the
// information on file, the new preKeys will be appended to the ones already on file. Otherwise, the existing registration will be replaced by the
// latest.
type Register struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedPreKey   []byte   `protobuf:"bytes,1,opt,name=signedPreKey,proto3" json:"signedPreKey,omitempty"`     // The signedPreKey for this device.
	OneTimePreKeys [][]byte `protobuf:"bytes,2,rep,name=oneTimePreKeys,proto3" json:"oneTimePreKeys,omitempty"` // Zero, one or more disposable preKeys for this device.
}

func (x *Register) Reset() {
	*x = Register{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{7}
}

func (x *Register) GetSignedPreKey() []byte {
	if x != nil {
		return x.SignedPreKey
	}
	return nil
}

func (x *Register) GetOneTimePreKeys() [][]byte {
	if x != nil {
		return x.OneTimePreKeys
	}
	return nil
}

// Requires authentication
//
// Removes the recorded registration for the client's Address.
type Unregister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Unregister) Reset() {
	*x = Unregister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unregister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unregister) ProtoMessage() {}

func (x *Unregister) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unregister.ProtoReflect.Descriptor instead.
func (*Unregister) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{8}
}

// Requires anonymous connection
//
// A request to retrieve preKey information for all registered devices for the given identityKey except those listed in knownDeviceIds.
type RequestPreKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityKey    []byte   `protobuf:"bytes,1,opt,name=identityKey,proto3" json:"identityKey,omitempty"`       // The identityKey for which to retrieve preKeys.
	KnownDeviceIds [][]byte `protobuf:"bytes,2,rep,name=knownDeviceIds,proto3" json:"knownDeviceIds,omitempty"` // Devices of this identity which the client already knows about and doesn't need preKeys for.
}

func (x *RequestPreKeys) Reset() {
	*x = RequestPreKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPreKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPreKeys) ProtoMessage() {}

func (x *RequestPreKeys) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPreKeys.ProtoReflect.Descriptor instead.
func (*RequestPreKeys) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{9}
}

func (x *RequestPreKeys) GetIdentityKey() []byte {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

func (x *RequestPreKeys) GetKnownDeviceIds() [][]byte {
	if x != nil {
		return x.KnownDeviceIds
	}
	return nil
}

// Information about a PreKey for a specific Address.
type PreKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId      []byte `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`           // The deviceId that this key material belongs to
	SignedPreKey  []byte `protobuf:"bytes,2,opt,name=signedPreKey,proto3" json:"signedPreKey,omitempty"`   // The most recent signedPreKey for the device at this Address. See https://crypto.stackexchange.com/questions/72148/signal-protocol-how-is-signed-preKey-created
	OneTimePreKey []byte `protobuf:"bytes,3,opt,name=oneTimePreKey,proto3" json:"oneTimePreKey,omitempty"` // One disposable preKey for the device at this Address. May be empty if none were available (that's okay, Signal can still do an X3DH key agreement without it).
}

func (x *PreKey) Reset() {
	*x = PreKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreKey) ProtoMessage() {}

func (x *PreKey) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreKey.ProtoReflect.Descriptor instead.
func (*PreKey) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{10}
}

func (x *PreKey) GetDeviceId() []byte {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *PreKey) GetSignedPreKey() []byte {
	if x != nil {
		return x.SignedPreKey
	}
	return nil
}

func (x *PreKey) GetOneTimePreKey() []byte {
	if x != nil {
		return x.OneTimePreKey
	}
	return nil
}

// A list of PreKeys for all of an identityKey's devices, sent in response to RequestPreKeys
type PreKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreKeys []*PreKey `protobuf:"bytes,1,rep,name=preKeys,proto3" json:"preKeys,omitempty"` // One or more preKeys
}

func (x *PreKeys) Reset() {
	*x = PreKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreKeys) ProtoMessage() {}

func (x *PreKeys) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreKeys.ProtoReflect.Descriptor instead.
func (*PreKeys) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{11}
}

func (x *PreKeys) GetPreKeys() []*PreKey {
	if x != nil {
		return x.PreKeys
	}
	return nil
}

// A notification from the server to the client that we're running low on oneTimePreKeys for the Address associated to this connection.
//
// Clients may choose to respond to this by sending a Register message with some more preKeys. This does not have to be tied to the initial PreKeysLow message.
type PreKeysLow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeysRequested uint32 `protobuf:"varint,1,opt,name=keysRequested,proto3" json:"keysRequested,omitempty"` // The number of additional oneTimePreKeys that the server is requesting.
}

func (x *PreKeysLow) Reset() {
	*x = PreKeysLow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreKeysLow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreKeysLow) ProtoMessage() {}

func (x *PreKeysLow) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreKeysLow.ProtoReflect.Descriptor instead.
func (*PreKeysLow) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{12}
}

func (x *PreKeysLow) GetKeysRequested() uint32 {
	if x != nil {
		return x.KeysRequested
	}
	return 0
}

// Requires anonymous connection
//
// A message from one client to another.
type OutboundMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To                        *Address `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`                                               // The Address of the message recipient
	UnidentifiedSenderMessage []byte   `protobuf:"bytes,2,opt,name=unidentifiedSenderMessage,proto3" json:"unidentifiedSenderMessage,omitempty"` // A sealed sender message (opaque to tassis). This is what will be delivered to the recipient.
}

func (x *OutboundMessage) Reset() {
	*x = OutboundMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutboundMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutboundMessage) ProtoMessage() {}

func (x *OutboundMessage) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutboundMessage.ProtoReflect.Descriptor instead.
func (*OutboundMessage) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{13}
}

func (x *OutboundMessage) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *OutboundMessage) GetUnidentifiedSenderMessage() []byte {
	if x != nil {
		return x.UnidentifiedSenderMessage
	}
	return nil
}

// An inbound message from another client to the currently authenticated client
type InboundMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnidentifiedSenderMessage []byte `protobuf:"bytes,3,opt,name=unidentifiedSenderMessage,proto3" json:"unidentifiedSenderMessage,omitempty"` // A sealed sender message (opaque to tassis).
}

func (x *InboundMessage) Reset() {
	*x = InboundMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundMessage) ProtoMessage() {}

func (x *InboundMessage) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundMessage.ProtoReflect.Descriptor instead.
func (*InboundMessage) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{14}
}

func (x *InboundMessage) GetUnidentifiedSenderMessage() []byte {
	if x != nil {
		return x.UnidentifiedSenderMessage
	}
	return nil
}

// Requests attachment upload authorizations.
type RequestUploadAuthorizations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumRequested int32 `protobuf:"varint,1,opt,name=numRequested,proto3" json:"numRequested,omitempty"` // the number of authorizations requested. The server may not return the number requested.
}

func (x *RequestUploadAuthorizations) Reset() {
	*x = RequestUploadAuthorizations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUploadAuthorizations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUploadAuthorizations) ProtoMessage() {}

func (x *RequestUploadAuthorizations) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUploadAuthorizations.ProtoReflect.Descriptor instead.
func (*RequestUploadAuthorizations) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{15}
}

func (x *RequestUploadAuthorizations) GetNumRequested() int32 {
	if x != nil {
		return x.NumRequested
	}
	return 0
}

// Provides authorization to upload an attachment to cloud storage
type UploadAuthorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadURL              string            `protobuf:"bytes,1,opt,name=uploadURL,proto3" json:"uploadURL,omitempty"`                                                                                                   // The URL to which to upload
	UploadFormData         map[string]string `protobuf:"bytes,2,rep,name=uploadFormData,proto3" json:"uploadFormData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // This form data needs to be included with the upload in order to authorize it
	AuthorizationExpiresAt int64             `protobuf:"varint,3,opt,name=authorizationExpiresAt,proto3" json:"authorizationExpiresAt,omitempty"`                                                                        // The unix timestamp in milliseconds when this authorization expires and can no longer be used
	MaxUploadSize          int64             `protobuf:"varint,4,opt,name=maxUploadSize,proto3" json:"maxUploadSize,omitempty"`                                                                                          // The maxmimum number of bytes that are allowed to be uploaded
	DownloadURL            string            `protobuf:"bytes,5,opt,name=downloadURL,proto3" json:"downloadURL,omitempty"`                                                                                               // The URL from which the attachment may be downloaded once it has been uploaded
}

func (x *UploadAuthorization) Reset() {
	*x = UploadAuthorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAuthorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAuthorization) ProtoMessage() {}

func (x *UploadAuthorization) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAuthorization.ProtoReflect.Descriptor instead.
func (*UploadAuthorization) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{16}
}

func (x *UploadAuthorization) GetUploadURL() string {
	if x != nil {
		return x.UploadURL
	}
	return ""
}

func (x *UploadAuthorization) GetUploadFormData() map[string]string {
	if x != nil {
		return x.UploadFormData
	}
	return nil
}

func (x *UploadAuthorization) GetAuthorizationExpiresAt() int64 {
	if x != nil {
		return x.AuthorizationExpiresAt
	}
	return 0
}

func (x *UploadAuthorization) GetMaxUploadSize() int64 {
	if x != nil {
		return x.MaxUploadSize
	}
	return 0
}

func (x *UploadAuthorization) GetDownloadURL() string {
	if x != nil {
		return x.DownloadURL
	}
	return ""
}

// Multiple UploadAuthorizations
type UploadAuthorizations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorizations []*UploadAuthorization `protobuf:"bytes,1,rep,name=authorizations,proto3" json:"authorizations,omitempty"`
}

func (x *UploadAuthorizations) Reset() {
	*x = UploadAuthorizations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAuthorizations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAuthorizations) ProtoMessage() {}

func (x *UploadAuthorizations) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAuthorizations.ProtoReflect.Descriptor instead.
func (*UploadAuthorizations) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{17}
}

func (x *UploadAuthorizations) GetAuthorizations() []*UploadAuthorization {
	if x != nil {
		return x.Authorizations
	}
	return nil
}

// Requires anonymous connection
//
// A request to look up a number corresponding to a short number.
type FindNumberByShortNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortNumber string `protobuf:"bytes,1,opt,name=shortNumber,proto3" json:"shortNumber,omitempty"` // the short number for which to look up the number
}

func (x *FindNumberByShortNumber) Reset() {
	*x = FindNumberByShortNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNumberByShortNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNumberByShortNumber) ProtoMessage() {}

func (x *FindNumberByShortNumber) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNumberByShortNumber.ProtoReflect.Descriptor instead.
func (*FindNumberByShortNumber) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{18}
}

func (x *FindNumberByShortNumber) GetShortNumber() string {
	if x != nil {
		return x.ShortNumber
	}
	return ""
}

// Requires anonymous connection
//
// A request to look up a number corresponding to an IdentityKey.
type FindNumberByIdentityKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityKey []byte `protobuf:"bytes,1,opt,name=identityKey,proto3" json:"identityKey,omitempty"` // the identity key for which to look up the number
}

func (x *FindNumberByIdentityKey) Reset() {
	*x = FindNumberByIdentityKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNumberByIdentityKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNumberByIdentityKey) ProtoMessage() {}

func (x *FindNumberByIdentityKey) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNumberByIdentityKey.ProtoReflect.Descriptor instead.
func (*FindNumberByIdentityKey) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{19}
}

func (x *FindNumberByIdentityKey) GetIdentityKey() []byte {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

// A number representing the IdentityKey in this system.
type Number struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number      string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`           // a form of IdentityKey that looks like a phone number
	ShortNumber string `protobuf:"bytes,2,opt,name=shortNumber,proto3" json:"shortNumber,omitempty"` // short version of the number
	Domain      string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`           // the domain within which the short number is registered
}

func (x *Number) Reset() {
	*x = Number{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Number) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Number) ProtoMessage() {}

func (x *Number) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Number.ProtoReflect.Descriptor instead.
func (*Number) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{20}
}

func (x *Number) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Number) GetShortNumber() string {
	if x != nil {
		return x.ShortNumber
	}
	return ""
}

func (x *Number) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// The envelope for all messages sent to/from clients.
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"` // the message sequence, either a unique number for request messages or the number of the request message to which a response message corresponds
	// Types that are assignable to Payload:
	//	*Message_Ack
	//	*Message_Error
	//	*Message_Configuration
	//	*Message_AuthChallenge
	//	*Message_AuthResponse
	//	*Message_Register
	//	*Message_Unregister
	//	*Message_RequestPreKeys
	//	*Message_PreKeys
	//	*Message_PreKeysLow
	//	*Message_RequestUploadAuthorizations
	//	*Message_UploadAuthorizations
	//	*Message_OutboundMessage
	//	*Message_InboundMessage
	//	*Message_FindNumberByShortNumber
	//	*Message_FindNumberByIdentityKey
	//	*Message_Number
	Payload isMessage_Payload `protobuf_oneof:"payload"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{21}
}

func (x *Message) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Message) GetAck() *Ack {
	if x, ok := x.GetPayload().(*Message_Ack); ok {
		return x.Ack
	}
	return nil
}

func (x *Message) GetError() *Error {
	if x, ok := x.GetPayload().(*Message_Error); ok {
		return x.Error
	}
	return nil
}

func (x *Message) GetConfiguration() *Configuration {
	if x, ok := x.GetPayload().(*Message_Configuration); ok {
		return x.Configuration
	}
	return nil
}

func (x *Message) GetAuthChallenge() *AuthChallenge {
	if x, ok := x.GetPayload().(*Message_AuthChallenge); ok {
		return x.AuthChallenge
	}
	return nil
}

func (x *Message) GetAuthResponse() *AuthResponse {
	if x, ok := x.GetPayload().(*Message_AuthResponse); ok {
		return x.AuthResponse
	}
	return nil
}

func (x *Message) GetRegister() *Register {
	if x, ok := x.GetPayload().(*Message_Register); ok {
		return x.Register
	}
	return nil
}

func (x *Message) GetUnregister() *Unregister {
	if x, ok := x.GetPayload().(*Message_Unregister); ok {
		return x.Unregister
	}
	return nil
}

func (x *Message) GetRequestPreKeys() *RequestPreKeys {
	if x, ok := x.GetPayload().(*Message_RequestPreKeys); ok {
		return x.RequestPreKeys
	}
	return nil
}

func (x *Message) GetPreKeys() *PreKeys {
	if x, ok := x.GetPayload().(*Message_PreKeys); ok {
		return x.PreKeys
	}
	return nil
}

func (x *Message) GetPreKeysLow() *PreKeysLow {
	if x, ok := x.GetPayload().(*Message_PreKeysLow); ok {
		return x.PreKeysLow
	}
	return nil
}

func (x *Message) GetRequestUploadAuthorizations() *RequestUploadAuthorizations {
	if x, ok := x.GetPayload().(*Message_RequestUploadAuthorizations); ok {
		return x.RequestUploadAuthorizations
	}
	return nil
}

func (x *Message) GetUploadAuthorizations() *UploadAuthorizations {
	if x, ok := x.GetPayload().(*Message_UploadAuthorizations); ok {
		return x.UploadAuthorizations
	}
	return nil
}

func (x *Message) GetOutboundMessage() *OutboundMessage {
	if x, ok := x.GetPayload().(*Message_OutboundMessage); ok {
		return x.OutboundMessage
	}
	return nil
}

func (x *Message) GetInboundMessage() *InboundMessage {
	if x, ok := x.GetPayload().(*Message_InboundMessage); ok {
		return x.InboundMessage
	}
	return nil
}

func (x *Message) GetFindNumberByShortNumber() *FindNumberByShortNumber {
	if x, ok := x.GetPayload().(*Message_FindNumberByShortNumber); ok {
		return x.FindNumberByShortNumber
	}
	return nil
}

func (x *Message) GetFindNumberByIdentityKey() *FindNumberByIdentityKey {
	if x, ok := x.GetPayload().(*Message_FindNumberByIdentityKey); ok {
		return x.FindNumberByIdentityKey
	}
	return nil
}

func (x *Message) GetNumber() *Number {
	if x, ok := x.GetPayload().(*Message_Number); ok {
		return x.Number
	}
	return nil
}

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_Ack struct {
	Ack *Ack `protobuf:"bytes,2,opt,name=ack,proto3,oneof"`
}

type Message_Error struct {
	Error *Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type Message_Configuration struct {
	Configuration *Configuration `protobuf:"bytes,4,opt,name=configuration,proto3,oneof"`
}

type Message_AuthChallenge struct {
	AuthChallenge *AuthChallenge `protobuf:"bytes,5,opt,name=authChallenge,proto3,oneof"`
}

type Message_AuthResponse struct {
	AuthResponse *AuthResponse `protobuf:"bytes,6,opt,name=authResponse,proto3,oneof"`
}

type Message_Register struct {
	Register *Register `protobuf:"bytes,7,opt,name=register,proto3,oneof"`
}

type Message_Unregister struct {
	Unregister *Unregister `protobuf:"bytes,8,opt,name=unregister,proto3,oneof"`
}

type Message_RequestPreKeys struct {
	RequestPreKeys *RequestPreKeys `protobuf:"bytes,9,opt,name=requestPreKeys,proto3,oneof"`
}

type Message_PreKeys struct {
	PreKeys *PreKeys `protobuf:"bytes,10,opt,name=preKeys,proto3,oneof"`
}

type Message_PreKeysLow struct {
	PreKeysLow *PreKeysLow `protobuf:"bytes,12,opt,name=preKeysLow,proto3,oneof"`
}

type Message_RequestUploadAuthorizations struct {
	RequestUploadAuthorizations *RequestUploadAuthorizations `protobuf:"bytes,13,opt,name=requestUploadAuthorizations,proto3,oneof"`
}

type Message_UploadAuthorizations struct {
	UploadAuthorizations *UploadAuthorizations `protobuf:"bytes,14,opt,name=uploadAuthorizations,proto3,oneof"`
}

type Message_OutboundMessage struct {
	OutboundMessage *OutboundMessage `protobuf:"bytes,15,opt,name=outboundMessage,proto3,oneof"`
}

type Message_InboundMessage struct {
	InboundMessage *InboundMessage `protobuf:"bytes,16,opt,name=inboundMessage,proto3,oneof"`
}

type Message_FindNumberByShortNumber struct {
	FindNumberByShortNumber *FindNumberByShortNumber `protobuf:"bytes,17,opt,name=findNumberByShortNumber,proto3,oneof"`
}

type Message_FindNumberByIdentityKey struct {
	FindNumberByIdentityKey *FindNumberByIdentityKey `protobuf:"bytes,18,opt,name=findNumberByIdentityKey,proto3,oneof"`
}

type Message_Number struct {
	Number *Number `protobuf:"bytes,19,opt,name=number,proto3,oneof"`
}

func (*Message_Ack) isMessage_Payload() {}

func (*Message_Error) isMessage_Payload() {}

func (*Message_Configuration) isMessage_Payload() {}

func (*Message_AuthChallenge) isMessage_Payload() {}

func (*Message_AuthResponse) isMessage_Payload() {}

func (*Message_Register) isMessage_Payload() {}

func (*Message_Unregister) isMessage_Payload() {}

func (*Message_RequestPreKeys) isMessage_Payload() {}

func (*Message_PreKeys) isMessage_Payload() {}

func (*Message_PreKeysLow) isMessage_Payload() {}

func (*Message_RequestUploadAuthorizations) isMessage_Payload() {}

func (*Message_UploadAuthorizations) isMessage_Payload() {}

func (*Message_OutboundMessage) isMessage_Payload() {}

func (*Message_InboundMessage) isMessage_Payload() {}

func (*Message_FindNumberByShortNumber) isMessage_Payload() {}

func (*Message_FindNumberByIdentityKey) isMessage_Payload() {}

func (*Message_Number) isMessage_Payload() {}

// Used internally by tassis for messages that are to be forwarded to a federated tassis
type ForwardedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     *OutboundMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`          // The message that's being forwarded
	FirstFailed int64            `protobuf:"varint,2,opt,name=firstFailed,proto3" json:"firstFailed,omitempty"` // The unix timestamp in milliseconds for when the message first failed to forward
	LastFailed  int64            `protobuf:"varint,3,opt,name=lastFailed,proto3" json:"lastFailed,omitempty"`   // The unix timestamp in milliseconds for when the message most recently failed to forward
}

func (x *ForwardedMessage) Reset() {
	*x = ForwardedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_Messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardedMessage) ProtoMessage() {}

func (x *ForwardedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_model_Messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardedMessage.ProtoReflect.Descriptor instead.
func (*ForwardedMessage) Descriptor() ([]byte, []int) {
	return file_model_Messages_proto_rawDescGZIP(), []int{22}
}

func (x *ForwardedMessage) GetMessage() *OutboundMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ForwardedMessage) GetFirstFailed() int64 {
	if x != nil {
		return x.FirstFailed
	}
	return 0
}

func (x *ForwardedMessage) GetLastFailed() int64 {
	if x != nil {
		return x.LastFailed
	}
	return 0
}

var File_model_Messages_proto protoreflect.FileDescriptor

var file_model_Messages_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x22, 0x05,
	0x0a, 0x03, 0x41, 0x63, 0x6b, 0x22, 0x3d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a,
	0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c,
	0x0a, 0x11, 0x6d, 0x61, 0x78, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x48, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x42, 0x0a,
	0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x56, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e, 0x6f, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x0c, 0x0a, 0x0a, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x73, 0x22, 0x6e, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x65,
	0x4b, 0x65, 0x79, 0x22, 0x33, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x28,
	0x0a, 0x07, 0x70, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x07, 0x70, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x32, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x4c, 0x6f, 0x77, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0x70, 0x0a, 0x0f,
	0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x3c, 0x0a, 0x19, 0x75, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x19, 0x75, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4e,
	0x0a, 0x0e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3c, 0x0a, 0x19, 0x75, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x19, 0x75, 0x6e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x41,
	0x0a, 0x1b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x22, 0xcf, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x12, 0x57, 0x0a, 0x0e, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x36, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x16, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6d, 0x61, 0x78, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c,
	0x1a, 0x41, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x5b, 0x0a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x3b, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3b, 0x0a,
	0x17, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x5a, 0x0a, 0x06, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xe5, 0x08, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f,
	0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x2e, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12,
	0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x34, 0x0a, 0x0a, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x6e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72,
	0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73,
	0x4c, 0x6f, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x4c, 0x6f, 0x77, 0x48, 0x00, 0x52,
	0x0a, 0x70, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x4c, 0x6f, 0x77, 0x12, 0x67, 0x0a, 0x1b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x1b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x14, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x14, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a,
	0x0e, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0e, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x5b, 0x0a, 0x17, 0x66, 0x69, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x17, 0x66, 0x69, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x79, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x17,
	0x66, 0x69, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x48, 0x00,
	0x52, 0x17, 0x66, 0x69, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x87,
	0x01, 0x0a, 0x10, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x2e, 0x4f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42, 0x41, 0x0a, 0x1b, 0x69, 0x6f, 0x2e, 0x6c,
	0x61, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x74, 0x61, 0x73, 0x73, 0x69, 0x73, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x6c, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x2f, 0x74,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_model_Messages_proto_rawDescOnce sync.Once
	file_model_Messages_proto_rawDescData = file_model_Messages_proto_rawDesc
)

func file_model_Messages_proto_rawDescGZIP() []byte {
	file_model_Messages_proto_rawDescOnce.Do(func() {
		file_model_Messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_Messages_proto_rawDescData)
	})
	return file_model_Messages_proto_rawDescData
}

var file_model_Messages_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_model_Messages_proto_goTypes = []interface{}{
	(*Ack)(nil),                         // 0: tassis.Ack
	(*Error)(nil),                       // 1: tassis.Error
	(*Address)(nil),                     // 2: tassis.Address
	(*Configuration)(nil),               // 3: tassis.Configuration
	(*Login)(nil),                       // 4: tassis.Login
	(*AuthChallenge)(nil),               // 5: tassis.AuthChallenge
	(*AuthResponse)(nil),                // 6: tassis.AuthResponse
	(*Register)(nil),                    // 7: tassis.Register
	(*Unregister)(nil),                  // 8: tassis.Unregister
	(*RequestPreKeys)(nil),              // 9: tassis.RequestPreKeys
	(*PreKey)(nil),                      // 10: tassis.PreKey
	(*PreKeys)(nil),                     // 11: tassis.PreKeys
	(*PreKeysLow)(nil),                  // 12: tassis.PreKeysLow
	(*OutboundMessage)(nil),             // 13: tassis.OutboundMessage
	(*InboundMessage)(nil),              // 14: tassis.InboundMessage
	(*RequestUploadAuthorizations)(nil), // 15: tassis.RequestUploadAuthorizations
	(*UploadAuthorization)(nil),         // 16: tassis.UploadAuthorization
	(*UploadAuthorizations)(nil),        // 17: tassis.UploadAuthorizations
	(*FindNumberByShortNumber)(nil),     // 18: tassis.FindNumberByShortNumber
	(*FindNumberByIdentityKey)(nil),     // 19: tassis.FindNumberByIdentityKey
	(*Number)(nil),                      // 20: tassis.Number
	(*Message)(nil),                     // 21: tassis.Message
	(*ForwardedMessage)(nil),            // 22: tassis.ForwardedMessage
	nil,                                 // 23: tassis.UploadAuthorization.UploadFormDataEntry
}
var file_model_Messages_proto_depIdxs = []int32{
	2,  // 0: tassis.Login.address:type_name -> tassis.Address
	10, // 1: tassis.PreKeys.preKeys:type_name -> tassis.PreKey
	2,  // 2: tassis.OutboundMessage.to:type_name -> tassis.Address
	23, // 3: tassis.UploadAuthorization.uploadFormData:type_name -> tassis.UploadAuthorization.UploadFormDataEntry
	16, // 4: tassis.UploadAuthorizations.authorizations:type_name -> tassis.UploadAuthorization
	0,  // 5: tassis.Message.ack:type_name -> tassis.Ack
	1,  // 6: tassis.Message.error:type_name -> tassis.Error
	3,  // 7: tassis.Message.configuration:type_name -> tassis.Configuration
	5,  // 8: tassis.Message.authChallenge:type_name -> tassis.AuthChallenge
	6,  // 9: tassis.Message.authResponse:type_name -> tassis.AuthResponse
	7,  // 10: tassis.Message.register:type_name -> tassis.Register
	8,  // 11: tassis.Message.unregister:type_name -> tassis.Unregister
	9,  // 12: tassis.Message.requestPreKeys:type_name -> tassis.RequestPreKeys
	11, // 13: tassis.Message.preKeys:type_name -> tassis.PreKeys
	12, // 14: tassis.Message.preKeysLow:type_name -> tassis.PreKeysLow
	15, // 15: tassis.Message.requestUploadAuthorizations:type_name -> tassis.RequestUploadAuthorizations
	17, // 16: tassis.Message.uploadAuthorizations:type_name -> tassis.UploadAuthorizations
	13, // 17: tassis.Message.outboundMessage:type_name -> tassis.OutboundMessage
	14, // 18: tassis.Message.inboundMessage:type_name -> tassis.InboundMessage
	18, // 19: tassis.Message.findNumberByShortNumber:type_name -> tassis.FindNumberByShortNumber
	19, // 20: tassis.Message.findNumberByIdentityKey:type_name -> tassis.FindNumberByIdentityKey
	20, // 21: tassis.Message.number:type_name -> tassis.Number
	13, // 22: tassis.ForwardedMessage.message:type_name -> tassis.OutboundMessage
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_model_Messages_proto_init() }
func file_model_Messages_proto_init() {
	if File_model_Messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_Messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Register); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unregister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPreKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreKeysLow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutboundMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUploadAuthorizations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadAuthorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadAuthorizations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNumberByShortNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNumberByIdentityKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Number); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_Messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_model_Messages_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*Message_Ack)(nil),
		(*Message_Error)(nil),
		(*Message_Configuration)(nil),
		(*Message_AuthChallenge)(nil),
		(*Message_AuthResponse)(nil),
		(*Message_Register)(nil),
		(*Message_Unregister)(nil),
		(*Message_RequestPreKeys)(nil),
		(*Message_PreKeys)(nil),
		(*Message_PreKeysLow)(nil),
		(*Message_RequestUploadAuthorizations)(nil),
		(*Message_UploadAuthorizations)(nil),
		(*Message_OutboundMessage)(nil),
		(*Message_InboundMessage)(nil),
		(*Message_FindNumberByShortNumber)(nil),
		(*Message_FindNumberByIdentityKey)(nil),
		(*Message_Number)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_Messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_Messages_proto_goTypes,
		DependencyIndexes: file_model_Messages_proto_depIdxs,
		MessageInfos:      file_model_Messages_proto_msgTypes,
	}.Build()
	File_model_Messages_proto = out.File
	file_model_Messages_proto_rawDesc = nil
	file_model_Messages_proto_goTypes = nil
	file_model_Messages_proto_depIdxs = nil
}
